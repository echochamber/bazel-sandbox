[package]
name = "compile_with_bazel"
version = "0.0.0"
edition = "2021"

# Mandatory (or Cargo tooling is unhappy)
[lib]
path = "fake_lib.rs"

[dependencies]
bytes = "1.4.0"
clap = "4.2.7"
clap_derive = "4.2.0"
dotenv = "0.15.0"
env_logger = "0.10.0"
futures = "0.3.28"
log = "0.4.11"
pbjson = "0.5.1"
pbjson-types = "0.5.1"
prost = { version ="0.11.9", features = ["prost-derive"] }
prost-build = "0.11.9"
prost-derive = "0.11.9"
prost-types = "0.11.9"
protobuf = "3.2.0"
protoc-gen-prost = "0.2.2"
protoc-gen-prost-crate = "0.3.0"
protoc-gen-prost-serde = "0.2.3"
protoc-gen-prost-validate = "0.0.1"
protoc-gen-tonic = "0.2.2"
protoc-wkt = "1.0.0"
ring = "0.16.20"
rustls-webpki = "0.100.1"
# Only necessary if using Protobuf well-known types:
serde = "1.0.160"
serde_derive = "1.0.163"
serde_yaml = "0.9.21"
to_unit = "1.0.2"
tokio = { version = "1.28.1", features = ["full"] }
tonic = "0.9.2"
tonic-build = "0.9.2"
tonic-reflection = "0.9.1"
uuid = "1.3.2"
walkdir = "2.3.3"
# echochamber_rdproto = { git = "https://github.com/echochamber/rdprotos", branch = "main", features = ["proto_full"] }

# Above this line should be the contents of your Cargo.toml file

[package.metadata.raze]
# The path at which to write output files.
#
# `cargo raze` will generate Bazel-compatible BUILD files into this path.
# This can either be a relative path (e.g. "foo/bar"), relative to this
# Cargo.toml file; or relative to the Bazel workspace root (e.g. "//foo/bar").
workspace_path = "//third_party/rust"

# This causes aliases for dependencies to be rendered in the BUILD
# file located next to this `Cargo.toml` file.
package_aliases_dir = "."

# The set of targets to generate BUILD rules for.
targets = [
    "x86_64-unknown-linux-gnu",
]

# The two acceptable options are "Remote" and "Vendored" which
# is used to indicate whether the user is using a non-vendored or
# vendored set of dependencies.
genmode = "Remote"

default_gen_buildrs = true


[package.metadata.raze.crates.clap.'*']
compile_data_attr = "glob([\"**/*.md\"])"

[package.metadata.raze.crates.clap_builder.'*']
compile_data_attr = "glob([\"**/*.md\"])"

[package.metadata.raze.crates.clap_derive.'*']
compile_data_attr = "glob([\"**/*.md\"])"

[package.metadata.raze.crates.prost.'*']
compile_data_attr = "glob([\"**/*.md\"])"

[package.metadata.raze.crates.rustls-webpki.'*']
compile_data_attr = "glob([\"**/*.der\"])"

[package.metadata.raze.crates.ring.'*']
compile_data_attr = "glob([\"**/*.der\"])"

[package.metadata.raze.crates.axum.'*']
compile_data_attr = "glob([\"**/*.md\"])"

[package.metadata.raze.crates.protoc-gen-prost.'*']
compile_data_attr = "glob([\"**/*.md\"])"

[package.metadata.raze.crates.protoc-gen-prost-crate.'*']
compile_data_attr = "glob([\"**/*.md\"])"

[package.metadata.raze.crates.protoc-gen-prost-serde.'*']
compile_data_attr = "glob([\"**/*.md\"])"

[package.metadata.raze.crates.protoc-gen-tonic.'*']
compile_data_attr = "glob([\"**/*.md\"])"
[package.metadata.raze.crates.tonic-reflection.'*']
compile_data_attr = "glob([\"**/generated/reflection_v1alpha1.bin\"])"